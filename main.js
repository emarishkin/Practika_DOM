// // let table = document.body.children[2]


// //     table.rows[0].cells[0].style.background  = 'red'
// //     table.rows[1].cells[1].style.background  = 'red'
// //     table.rows[2].cells[2].style.background  = 'red'
// //     table.rows[3].cells[3].style.background  = 'red'
// //     table.rows[4].cells[4].style.background  = 'red'


// // Напиши программу, которая посчитает сколько всего рублей понадобится на поездку.
// // Курсы валют указаны в переменных euroRate и dollarRate.
// // Переменные euroAmount и dollarAmount— необходимые суммы на поездку.
// // Создай переменную rublesAmount и записывай в неё результат вычислений.

// let euroRate = 74;
// let dollarRate = 63;

// let euroAmount = 500;
// let dollarAmount = 2500;

// let euroRub=euroRate*euroAmount
// let UsdRub=dollarRate*dollarAmount

// let rublesAmount = euroRub+UsdRub

// // Напиши программу, которая посчитает, сколько в итоге денег я буду должен отдать после поездки.
// // Я могу занять необходимую сумму, но буду должен вернуть в два раза больше, чем взял.
// // В переменной travelCost сумма необходимая на поездку.
// // В переменной balance находится сумма, которая есть у меня сейчас.
// // Узнай, сколько я буду должен отдать своему другу, и запиши результат в переменную debtAmount.


// let travelCost = 150000;
// let balance = 100000;
// let debtAmount=(travelCost-balance)*2


// // Мяу! Посчитай сколько времени займёт мой перелёт.
// // В переменную flightDistance записано расстояние полёта в километрах.
// // В переменной averageSpeed находится средняя скорость самолёта (километры в час).
// // Найди время полёта (в часах) и запиши его в переменную flightTime.
// // Округляй результат вычислений с помощью команды Math.round.

// let flightDistance = 7260;
// let averageSpeed = 600;
// let flightTime = Math.round(flightDistance/averageSpeed)


// // Мяу! Напиши программу, которая будет определять возрастную группу по возрасту.
// // Возраст записан в переменную age.
// // Проверяй возраст и записывай возрастную группу в виде строки в переменную ageGroup.
// // Если возраст до года включительно, то возрастная группа называется 'Котята'.
// // Если возраст от года (не включая это значение) до трёх лет включительно — 'Молодые коты'.
// // Если возраст от трёх лет (не включая это значение) до семи (включительно) — 'Коты средних лет'.
// // А если возраст от семи лет (не включая это значение) и больше — 'Почтенные коты'.


// let age = 5;
// let ageGroup;

// if(age<=1){
//   ageGroup='Котята'
// } else if(age>=1 && age<=3){
//    ageGroup='Молодые коты'
// } else if(age>3 && age<=7){
//    ageGroup='Коты средних лет'
// } else if(age>7){
//    ageGroup='Почтенные коты'
// } 

// // Мяу! Запрограммируй умные весы, чтобы они давали рекомендации в зависимости от веса.
// // Вес записан в переменную weight.
// // Рекомендацию записывай строкой в переменную recommendation.
// // Если вес до 4 кг (не включая это значение), рекомендация – 'Пора перекусить'.
// // Если вс от 4 кг включительно до 5.5 кг включительно – 'Вес в норме'.
// // Если вес больше 5.5 кг – 'Пора на тренировку'.

// let weight = 5;
// let recommendation;

// weight<4?recommendation='Пора перекусить':''
// weight>5.5?recommendation='Пора на тренировку':''
// weight>=4 && weight<=5.5 ?recommendation='Вес в норме':''

// // Программа должна анализировать числа.
// // Если число делится на 3, результат работы программы — строка 'Fizz'.
// // Если число делится на 5 — строка 'Buzz'.
// // Если число одновременно делится на 3 и на 5 — результат 'FizzBuzz'.
// // В остальных случаях результат работы программы — изначальное число.
// // Число записано в переменную number.
// // Результат работы программы записывайте в переменную taskResult.

// let number = 15;
// let taskResult;

// if(number%3==0 && number%5==0){
//   taskResult='FizzBuzz'
// } else if(number%5==0){
//    taskResult='Buzz'
// } else if(number%3==0 ){
//    taskResult='Fizz'
// } else {
//   taskResult=number
// }

// // Напишите программу, которая последовательно выводит в консоль числа в геометрической прогрессии.
// // Стартовое значение, с которого должна начаться последовательность, записано в переменную startNumber.
// // Множитель записан в переменную multiplier.
// // Количество чисел записано в переменную quantity.


// let startNumber = 1;
// let multiplier = 4;
// let quantity = 7;

// while(quantity>0){
//   console.log(startNumber);
//   startNumber*=multiplier
//   quantity--
// }

// // Напишите универсальную программу, которая вычисляет сумму чисел от 1 до n.
// // Число, до которого нужно складывать числа (включительно), указано в переменной lastNumber.
// // Найдите сумму всех чисел и сохраните результат в переменную sum.


// let lastNumber = 10;
// let sum = 0;

// for(let i=sum;i<=lastNumber;i++){
//   sum+=i
// }

// Напишите универсальную программу, которая находит произведение всех чётных чисел из последовательности от 1 до n.
// Число, до которого идёт последовательность (включительно), записано в переменную lastNumber
// Найдите произведение всех чисел и сохраните результат в переменную multiplicationResult.

let lastNumber = 5;
let multiplicationResult = 1;

for(let i=1;i<=lastNumber;i++){
 if(i%2==0){
   multiplicationResult*=i
 }
}

// Напишите программу, которая находит все делители числа, кроме единицы и самого числа.
// Число, делители которого нужно найти, записано в переменную number.
// Выводите делители в консоль последовательно, друг за другом.

let number = 15;

for(let i=2;i<number;i++){
 if(number%i==0){
   console.log(i)
 }
}


// Напиши программу, которая формирует заказ в виде строки.
// Массив с вариантами основы для смузи записан в переменную liquids.
// Массив с фруктами находится в переменной fruits.
// Массив с зеленью записан в переменную greens.
// Выбор посетителя записан в виде чисел в переменные chosenLiquid (индекс выбранной основы для смузи), chosenFruit (выбранный фрукт), chosenGreen (выбранная зелень).
// Обрати внимание, что посетители выбирают пункты в электронном меню, где нумерация начинается с единицы, а не с нуля, как в массивах. Учти это при решении.
// Собери строку с заказом посетителя вида 'Основа — ' + основа для смузи + ', фрукт — ' + выбранный фрукт + ', зелень — ' + выбранная зелень. Запиши результат в переменную order.


let liquids = ['вода', 'молоко', 'сок', 'чай', 'йогурт'];
let fruits = ['киви', 'банан', 'персик', 'манго', 'груша', 'ананас'];
let greens = ['мята', 'шпинат', 'руккола', 'петрушка', 'базилик'];

// Выбор посетителя

let chosenLiquid = 1;
let chosenFruit = 3;
let chosenGreen = 2;

// Заказ

let order = 'Основа — '+liquids[chosenLiquid-1]+', фрукт — '+fruits[chosenFruit-1] + ', зелень — '+ greens[chosenGreen-1];


// Мяу! Напиши программу для определения типа транспорта на велосипедной парковке.
// Оформи решение в виде функции checkVehicle с двумя параметрами: количество колёс у транспорта и вес этого транспорта. Названия параметров могут быть любыми.
// Если колеса два и вес транспорта меньше 100 кг, это велосипед. Функция должна возвращать строку 'Парковка разрешена'.
// В остальных случаях функция должна возвращать строку 'Вам здесь не место! Мяу!'.


function checkVehicle(count,weight){
    let message = 'Вам здесь не место! Мяу!'
    if(count===2 && weight<100){
      message = 'Парковка разрешена'
    } 
    return message
  }
  checkVehicle(2,11)


//   Мяу! Напиши функцию calculatePressure, которая будет считать давление на глубине и возвращать это значение из функции.
// Формула расчёта такая: давление = плотность жидкости * ускорение свободного падения * глубина.
// У calculatePressure должно быть два параметра: плотность жидкости и глубина. Названия параметров могут быть любыми.
// Ускорение свободного падения записывать в параметры не нужно. В формуле можно использовать среднее фиксированное значение — 9.8.
// Результат вычислений округляй с помощью Math.round.


function calculatePressure(density,depth){
    let pressure= Math.round(density*9.8*depth)
    return pressure
  }


//   Создай функцию translate с двумя параметрами.
// Первый параметр — строка со словом на русском языке,которое нужно перевести на английский.
// Второй параметр — объект с данными, в котором хранится перевод слов.
// Функция должна возвращать строку вида: 'понедельник по-английски: monday'.


function translate(rus,uk){
    return rus + ' по-английски: ' +uk[rus]
  }

